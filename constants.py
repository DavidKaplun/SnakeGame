import pygame
#sizes
SQUARE_SIZE=40
BOARD_LENGTH=15
BOARD_HEIGHT=15
SCREEN_WIDTH=32*SQUARE_SIZE
SCREEN_HEIGHT=17*SQUARE_SIZE

#colors
WHITE,BLACK= (98,255,92),(69,232,63)
SNAKE_COLOR=(30,144,255)
APPLE_COLOR=(255,0,0)
WALL_COLOR=(101,53,15)
BACKGROUND_COLOR=(0,0,0)
TEXT_COLOR=(255,255,255)
#wall types
HORIZONTAL=1
VERTICAL=2

#snake speed
SPEED=2

#time
TIME_DELAY=10

#index
FIRST=0
LAST=-1

INVALID_BLOCK=-1
INVALID_APPLE=-1
INCONSTRACTABLE=-1

MIN_DIST_BETWEEN_APPLE_AND_SNAKE=8*SQUARE_SIZE

CLICKED=1
#wall length constants
MIN_WALL_LENGTH=3
WALL_LENGTH=5

#grid representation constants
EMPTY=0
SNAKE_HEAD=1
APPLE=2
BARRIER=3
BLOCK_TO_MOVE_TO=4


#main menu constants
FIRST_BUTTON_Y_OFFSET=2*SQUARE_SIZE
BUTTONS_X_OFFSET=12*SQUARE_SIZE

BUTTONS_LENGTH=6*SQUARE_SIZE
BUTTONS_HEIGHT=2*SQUARE_SIZE

DISTANCE_BETWEEN_BUTTONS=SQUARE_SIZE+BUTTONS_HEIGHT

NUM_OF_BUTTONS=5

BUTTON_COLOR=(255,0,0)

MAIN_MENU_BUTTONS_TEXTS=["Single Player","Multiplayer","My Stats","Rules","Exit"]

BUTTON_TEXT_Y_OFFSET=SQUARE_SIZE
BUTTON_TEXT_X_OFFSET=2.8*SQUARE_SIZE


FONT_SIZE=20

#main menu buttons
SINGLE_PLAYER_BUTTON=pygame.Rect(BUTTONS_X_OFFSET, FIRST_BUTTON_Y_OFFSET, BUTTONS_LENGTH, BUTTONS_HEIGHT)
MULTI_PLAYER_BUTTON=pygame.Rect(BUTTONS_X_OFFSET, FIRST_BUTTON_Y_OFFSET+DISTANCE_BETWEEN_BUTTONS, BUTTONS_LENGTH, BUTTONS_HEIGHT)
MY_STATS_BUTTON=pygame.Rect(BUTTONS_X_OFFSET, FIRST_BUTTON_Y_OFFSET+2*DISTANCE_BETWEEN_BUTTONS, BUTTONS_LENGTH, BUTTONS_HEIGHT)
RULES_BUTTON=pygame.Rect(BUTTONS_X_OFFSET, FIRST_BUTTON_Y_OFFSET+3*DISTANCE_BETWEEN_BUTTONS, BUTTONS_LENGTH, BUTTONS_HEIGHT)
EXIT_BUTTON=pygame.Rect(BUTTONS_X_OFFSET, FIRST_BUTTON_Y_OFFSET+4*DISTANCE_BETWEEN_BUTTONS, BUTTONS_LENGTH, BUTTONS_HEIGHT)



#background constants
BACKGROUND_OFFSET_X = 8 * SQUARE_SIZE
BACKGROUND_OFFSET_Y = 0

BACKGROUND_HEIGHT = 13 * SQUARE_SIZE
BACKGROUND_WIDTH = 16* SQUARE_SIZE

#rules title constants
RULES_TITLE_TEXT="RULES OF THE GAME:"
STATS_TITLE_TEXT="MY STATS:"
TITLE_X_OFFSET=12*SQUARE_SIZE
TITLE_Y_OFFSET=BACKGROUND_OFFSET_Y+20

#rules text constants
RULES_TEXT=["1. board is 15x15","2. screen size of game is 31x15","3. snake starts 3 blocks long","4. 1 apple = 1 point (for every point a snake gets 1 block longer)","5. when 1 of the players eats an apple then the apple reappears ","    in a different place on BOTH players boards","6. every time a new apple appears, so is a wall of","    3-5 blocks between the snake and the apple itself","7. if a players hits a wall or himself then he loses,","    regardless of how many points he has","8. first one to get to score 30, wins"]
FIRST_TEXT_OFFSET=1.2*SQUARE_SIZE+BACKGROUND_OFFSET_Y
TEXT_OFFSET_X=BACKGROUND_OFFSET_X+10
TEXT_OFFSET_Y=SQUARE_SIZE

#rules back button recktangle
BACK_BUTTON_X_OFFSET=13*SQUARE_SIZE
BACK_BUTTON_Y_OFFSET=13.5*SQUARE_SIZE

BUTTON_SIZE_X=4.5*SQUARE_SIZE
BUTTON_SIZE_Y=1.5*SQUARE_SIZE
BACK_BUTTON=pygame.Rect(BACK_BUTTON_X_OFFSET, BACK_BUTTON_Y_OFFSET, BUTTON_SIZE_X, BUTTON_SIZE_Y)

#rules back button text constants
BACK_BUTTON_TEXT="BACK"
BACK_BUTTON_TEXT_X_OFFSET=1.5*SQUARE_SIZE+BACK_BUTTON_X_OFFSET
BACK_BUTTON_TEXT_Y_OFFSET=20+BACK_BUTTON_Y_OFFSET


#board offsets
BOARD1_OFFSET_X=0
BOARD2_OFFSET_X=16*SQUARE_SIZE

BOARD_OFFSET_Y=1*SQUARE_SIZE

SCORE_OFFSET_Y=SQUARE_SIZE/4

BOARD1_NAME_OFFSET_X=5*SQUARE_SIZE
BOARD1_SCORE_OFFSET_X=10*SQUARE_SIZE

BOARD2_NAME_OFFSET_X=20*SQUARE_SIZE
BOARD2_SCORE_OFFSET_X=25*SQUARE_SIZE

#end of game screen constants

END_OF_GAME_BACKGROUND_HEIGHT=6*SQUARE_SIZE
END_OF_GAME_BACKGROUND_LENGTH=8*SQUARE_SIZE

END_OF_GAME_BACKGROUND_X_OFFSET=12*SQUARE_SIZE
END_OF_GAME_BACKGROUND_Y_OFFSET=5*SQUARE_SIZE

#end of game text pos
END_OF_GAME_TEXT_OFFSET_X=END_OF_GAME_BACKGROUND_X_OFFSET+SQUARE_SIZE
END_OF_GAME_TEXT_OFFSET_Y=END_OF_GAME_BACKGROUND_Y_OFFSET+SQUARE_SIZE

#end of game button constants
END_OF_GAME_BACK_BUTTON_X_OFFSET=END_OF_GAME_BACKGROUND_X_OFFSET+SQUARE_SIZE
END_OF_GAME_BACK_BUTTON_Y_OFFSET=END_OF_GAME_BACKGROUND_Y_OFFSET+4*SQUARE_SIZE

END_OF_GAME_BACK_BUTTON_TEXT_X_OFFSET=END_OF_GAME_BACK_BUTTON_X_OFFSET+SQUARE_SIZE
END_OF_GAME_BACK_BUTTON_TEXT_Y_OFFSET=END_OF_GAME_BACK_BUTTON_Y_OFFSET+SQUARE_SIZE/4

END_OF_GAME_BUTTON_LENGTH=4*SQUARE_SIZE
END_OF_GAME_BUTTON_HEIGHT=SQUARE_SIZE

END_OF_GAME_BACK_BUTTON=pygame.Rect(END_OF_GAME_BACK_BUTTON_X_OFFSET, END_OF_GAME_BACK_BUTTON_Y_OFFSET, END_OF_GAME_BUTTON_LENGTH, END_OF_GAME_BUTTON_HEIGHT)

#play again button constants
PLAY_AGAIN_BUTTON_X_OFFSET=END_OF_GAME_BACKGROUND_X_OFFSET+SQUARE_SIZE
PLAY_AGAIN_BUTTON_Y_OFFSET=END_OF_GAME_BACKGROUND_Y_OFFSET+2*SQUARE_SIZE

PLAY_AGAIN_BUTTON_TEXT_X_OFFSET=PLAY_AGAIN_BUTTON_X_OFFSET+SQUARE_SIZE
PLAY_AGAIN_BUTTON_TEXT_Y_OFFSET=PLAY_AGAIN_BUTTON_Y_OFFSET+SQUARE_SIZE/4

PLAY_AGAIN_BUTTON=pygame.Rect(PLAY_AGAIN_BUTTON_X_OFFSET, PLAY_AGAIN_BUTTON_Y_OFFSET, END_OF_GAME_BUTTON_LENGTH, END_OF_GAME_BUTTON_HEIGHT)



#protocol numbers
REGISTER='1'
LOGIN='2'
GET_STATS='3'
SEND_BOARD='4'
REQUEST_GAME='7'
WON_GAME='10'
LOST_GAME='20'

ERROR='0'
SUCCESS='1'
SEND_STATS='3'
SEND_UPDATED_RANK='5'
START_GAME='6'
SEARCHING_FOR_PLAYERS='7'

#server constants
SERVER_PORT=6969
SERVER_IP = '127.0.0.1'
MAX_QUEUE_LENGTH=10

#lock constants
UNLOCKED=0
LOCKED=1

#wait time
WAIT_TIME=0.5

#buf size
BUF_SIZE=4096




#login/register page constants
LOGIN_TEXT="LOGIN"
LOGIN_TEXT_OFFSET_X=13*SQUARE_SIZE
LOGIN_TEXT_OFFSET_Y=SQUARE_SIZE

REGISTER_TEXT="REGISTER"
REGISTER_TEXT_OFFSET_X=13*SQUARE_SIZE
REGISTER_TEXT_OFFSET_Y=SQUARE_SIZE

DONT_HAVE_ACCOUNT_TEXT="dont have an account? register here"
DONT_HAVE_ACCOUNT_TEXT_OFFSET_X=12*SQUARE_SIZE
DONT_HAVE_ACCOUNT_TEXT_OFFSET_Y=8.5*SQUARE_SIZE

ALREADY_HAVE_ACCOUNT_TEXT="already have an account? login here"
ALREADY_HAVE_ACCOUNT_TEXT_OFFSET_X=12*SQUARE_SIZE
ALREADY_HAVE_ACCOUNT_TEXT_OFFSET_Y=8.5*SQUARE_SIZE


DONT_HAVE_ACCOUNT_CLICK_BOX=pygame.Rect(DONT_HAVE_ACCOUNT_TEXT_OFFSET_X, DONT_HAVE_ACCOUNT_TEXT_OFFSET_Y, 9*SQUARE_SIZE, SQUARE_SIZE/2)


USERNAME_TEXT_OFFSET_X=13*SQUARE_SIZE
USERNAME_TEXT_OFFSET_Y=3*SQUARE_SIZE

USERNAME_ENTRY_OFFSET_X=USERNAME_TEXT_OFFSET_X
USERNAME_ENTRY_OFFSET_Y=4*SQUARE_SIZE

PASSWORD_TEXT_OFFSET_X=USERNAME_TEXT_OFFSET_X
PASSWORD_TEXT_OFFSET_Y=6*SQUARE_SIZE

PASSWORD_ENTRY_OFFSET_X=USERNAME_TEXT_OFFSET_X
PASSWORD_ENTRY_OFFSET_Y=7*SQUARE_SIZE

ENTRY_SIZE_X=5*SQUARE_SIZE
ENTRY_SIZE_Y=SQUARE_SIZE

USERNAME_INPUT_RECT=pygame.Rect(USERNAME_ENTRY_OFFSET_X, USERNAME_ENTRY_OFFSET_Y, ENTRY_SIZE_X, ENTRY_SIZE_Y)
PASSWORD_INPUT_RECT=pygame.Rect(PASSWORD_ENTRY_OFFSET_X, PASSWORD_ENTRY_OFFSET_Y, ENTRY_SIZE_X, ENTRY_SIZE_Y)

#login button constants
LOGIN_BUTTON_OFFSET_X=13*SQUARE_SIZE
LOGIN_BUTTON_OFFSET_Y=10*SQUARE_SIZE


LOGIN_BUTTON_HEIGHT=SQUARE_SIZE
LOGIN_BUTTON_WIDTH=4*SQUARE_SIZE

LOGIN_BUTTON=pygame.Rect(LOGIN_BUTTON_OFFSET_X, LOGIN_BUTTON_OFFSET_Y, LOGIN_BUTTON_WIDTH, LOGIN_BUTTON_HEIGHT)

#register button constants
REGISTER_BUTTON_OFFSET_X=13*SQUARE_SIZE
REGISTER_BUTTON_OFFSET_Y=10*SQUARE_SIZE

REGISTER_BUTTON_HEIGHT=SQUARE_SIZE
REGISTER_BUTTON_WIDTH=4*SQUARE_SIZE

REGISTER_BUTTON=pygame.Rect(REGISTER_BUTTON_OFFSET_X, REGISTER_BUTTON_OFFSET_Y, REGISTER_BUTTON_WIDTH, REGISTER_BUTTON_HEIGHT)

#error messages in login/register
LOGIN_ERROR_MESSAGE="username or password incorrect"
LOGIN_ERROR_MESSAGE_OFFSET_X=12*SQUARE_SIZE
LOGIN_ERROR_MESSAGE_OFFSET_Y=9*SQUARE_SIZE

REGISTER_ERROR_MESSAGE="username already exists. chose a different one"
REGISTER_ERROR_MESSAGE_OFFSET_X=12*SQUARE_SIZE
REGISTER_ERROR_MESSAGE_OFFSET_Y=9*SQUARE_SIZE

#entries color constants
COLOR_ACTIVE=pygame.Color('dodgerblue2')
COLOR_INACTIVE=pygame.Color('lightskyblue3')

#grid resresentation
GRID_SNAKE_BLOCK='1'
GRID_APPLE='2'
GRID_WALL='3'